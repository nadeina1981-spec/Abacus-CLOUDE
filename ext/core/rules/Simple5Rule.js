// ext/core/rules/Simple5Rule.js - –ü—Ä–∞–≤–∏–ª–æ "–ü—Ä–æ—Å—Ç–æ —Å 5"

import { SimpleRule } from './SimpleRule.js';

/**
 * Simple5Rule - –ø—Ä–∞–≤–∏–ª–æ "–ü—Ä–æ—Å—Ç–æ" —Å –≤–µ—Ä—Ö–Ω–µ–π –∫–æ—Å—Ç–æ—á–∫–æ–π (0-9)
 * –†–∞—Å—à–∏—Ä—è–µ—Ç SimpleRule, –¥–æ–±–∞–≤–ª—è—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è ¬±5
 * 
 * –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
 * - –í—Å–µ –ø—Ä–∞–≤–∏–ª–∞ SimpleRule —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è
 * - –î–æ–±–∞–≤–ª–µ–Ω—ã –æ–ø–µ—Ä–∞—Ü–∏–∏ ¬±5 (–≤–µ—Ä—Ö–Ω—è—è –∫–æ—Å—Ç–æ—á–∫–∞)
 * - –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: 9 (–≤–º–µ—Å—Ç–æ 4)
 * - –ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–æ–≥—É—Ç –±—ã—Ç—å > 5
 * - –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: 0-5 (–¥–æ–ª–∂–Ω–æ –∑–∞–∫—Ä—ã—Ç—å—Å—è)
 * - –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û: –í –ø—Ä–∏–º–µ—Ä–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ ¬±5
 * - –§–ò–ó–ò–ß–ï–°–ö–û–ï –û–ì–†–ê–ù–ò–ß–ï–ù–ò–ï: –ï—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ >= 5, –Ω–µ–ª—å–∑—è –¥–æ–±–∞–≤–ª—è—Ç—å +1,+2,+3,+4
 */
export class Simple5Rule extends SimpleRule {
  constructor(config = {}) {
    super(config);
    
    this.name = "–ü—Ä–æ—Å—Ç–æ —Å 5";
    this.description = "–†–∞–±–æ—Ç–∞ —Å –Ω–∏–∂–Ω–∏–º–∏ –∏ –≤–µ—Ä—Ö–Ω–µ–π –∫–æ—Å—Ç–æ—á–∫–∞–º–∏ (0-9), –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ ¬±5";
    
    // –†–∞—Å—à–∏—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    this.config = {
      ...this.config,
      maxState: 9,  // –ú–æ–∂–µ–º –¥–æ—Ö–æ–¥–∏—Ç—å –¥–æ 9 –≤ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è—Ö
      allowedActions: [1, 2, 3, 4, 5, -1, -2, -3, -4, -5], // –î–æ–±–∞–≤–ª—è–µ–º ¬±5
      forbiddenActions: [], // –£–±–∏—Ä–∞–µ–º –∑–∞–ø—Ä–µ—Ç –Ω–∞ ¬±5
      maxFinalState: 5, // –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 5
      mustHave5: true,  // –í –ø—Ä–∏–º–µ—Ä–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å ¬±5
      ...config
    };
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è —Å —É—á—ë—Ç–æ–º —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
   * @param {number} currentState - –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
   * @param {boolean} isFirstAction - –ü–µ—Ä–≤–æ–µ –ª–∏ —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ
   * @returns {number[]} - –ú–∞—Å—Å–∏–≤ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
   */
  getAvailableActions(currentState, isFirstAction = false) {
    // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º –±–∞–∑–æ–≤—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –æ—Ç SimpleRule
    let actions = super.getAvailableActions(currentState, isFirstAction);
    
    // –§–ò–ó–ò–ß–ï–°–ö–û–ï –û–ì–†–ê–ù–ò–ß–ï–ù–ò–ï: –ù–µ–ª—å–∑—è –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–∏–∂–Ω–∏–µ –∫–æ—Å—Ç–æ—á–∫–∏ –∫ —É–∂–µ –∏–º–µ—é—â–∏–º—Å—è 5+
    // –ï—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ >= 5, —Ç–æ –Ω–µ–ª—å–∑—è –¥–µ–ª–∞—Ç—å +1, +2, +3, +4
    if (currentState >= 5) {
      actions = actions.filter(action => {
        // –ú–æ–∂–Ω–æ: -1, -2, -3, -4, -5 (—É–±–∏—Ä–∞–µ–º –∫–æ—Å—Ç–æ—á–∫–∏)
        // –ú–æ–∂–Ω–æ: +5 (–µ—Å–ª–∏ –Ω–µ –≤—ã—Ö–æ–¥–∏–º –∑–∞ 9)
        // –ù–µ–ª—å–∑—è: +1, +2, +3, +4 (—Ñ–∏–∑–∏—á–µ—Å–∫–∏ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ!)
        return action < 0 || action === 5;
      });
      console.log(`üîí –°–æ—Å—Ç–æ—è–Ω–∏–µ ${currentState} ‚â• 5 ‚Üí –∑–∞–ø—Ä–µ—â–µ–Ω—ã +1,+2,+3,+4`);
    }
    
    // –§–ò–ó–ò–ß–ï–°–ö–û–ï –û–ì–†–ê–ù–ò–ß–ï–ù–ò–ï: –ï—Å–ª–∏ –Ω–∞ –∞–±–∞–∫—É—Å–µ 4 –Ω–∏–∂–Ω–∏–µ –∫–æ—Å—Ç–æ—á–∫–∏,
    // –Ω–µ–ª—å–∑—è –¥–æ–±–∞–≤–ª—è—Ç—å –µ—â—ë –Ω–∏–∂–Ω–∏–µ (–¥–æ–ª–∂–Ω—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å +5)
    if (currentState === 4) {
      actions = actions.filter(action => action !== 1);
      console.log(`üîí –°–æ—Å—Ç–æ—è–Ω–∏–µ 4 ‚Üí –∑–∞–ø—Ä–µ—â–µ–Ω–æ +1 (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å +5)`);
    }
    if (currentState === 3) {
      actions = actions.filter(action => ![1, 2].includes(action));
      console.log(`üîí –°–æ—Å—Ç–æ—è–Ω–∏–µ 3 ‚Üí –∑–∞–ø—Ä–µ—â–µ–Ω—ã +1,+2 (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å +5)`);
    }
    if (currentState === 2) {
      actions = actions.filter(action => ![1, 2, 3].includes(action));
      console.log(`üîí –°–æ—Å—Ç–æ—è–Ω–∏–µ 2 ‚Üí –∑–∞–ø—Ä–µ—â–µ–Ω—ã +1,+2,+3 (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å +5)`);
    }
    if (currentState === 1) {
      actions = actions.filter(action => ![1, 2, 3, 4].includes(action));
      console.log(`üîí –°–æ—Å—Ç–æ—è–Ω–∏–µ 1 ‚Üí –∑–∞–ø—Ä–µ—â–µ–Ω—ã +1,+2,+3,+4 (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å +5)`);
    }
    
    console.log(`‚úÖ –§–∏–∑–∏—á–µ—Å–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –∏–∑ ${currentState}: [${actions.join(', ')}]`);
    return actions;
  }

  /**
   * –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–∏–º–µ—Ä–∞ —Å —É—á—ë—Ç–æ–º –ø—Ä–∞–≤–∏–ª Simple5
   * @param {Object} example - –ü—Ä–∏–º–µ—Ä {start, steps, answer}
   * @returns {boolean}
   */
  validateExample(example) {
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞ SimpleRule
    // –ù–û –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É maxState, —Ç.–∫. —É –Ω–∞—Å maxState = 9
    const { start, steps, answer } = example;
    
    // 1. –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 0
    if (start !== 0) {
      console.error(`‚ùå –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ ${start} ‚â† 0`);
      return false;
    }
    
    // 2. –ü–µ—Ä–≤–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º
    if (steps.length > 0 && steps[0].action <= 0) {
      console.error(`‚ùå –ü–µ—Ä–≤–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ ${steps[0].action} –Ω–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ`);
      return false;
    }
    
    // 3. –í –ø—Ä–∏–º–µ—Ä–µ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏—è ¬±5
    const has5 = steps.some(step => Math.abs(step.action) === 5);
    if (!has5) {
      console.error(`‚ùå –í –ø—Ä–∏–º–µ—Ä–µ –Ω–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏–π ¬±5 (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å SimpleRule, –∞ –Ω–µ Simple5Rule)`);
      return false;
    }
    
    // 4. –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 0-5 (–∑–∞–∫—Ä—ã–ª—Å—è)
    if (answer > this.config.maxFinalState) {
      console.error(`‚ùå –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ ${answer} > 5 (–Ω–µ –∑–∞–∫—Ä—ã–ª—Å—è –ø—Ä–∏–º–µ—Ä)`);
      return false;
    }
    
    if (answer < 0) {
      console.error(`‚ùå –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ ${answer} < 0`);
      return false;
    }
    
    // 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –ø–æ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏—è–º
    for (const step of steps) {
      const state = step.fromState;
      const action = step.action;
      
      // –ï—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ >= 5, –Ω–µ–ª—å–∑—è –¥–æ–±–∞–≤–ª—è—Ç—å +1,+2,+3,+4
      if (state >= 5 && action > 0 && action < 5) {
        console.error(`‚ùå –§–∏–∑–∏—á–µ—Å–∫–∏ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ: –∏–∑ ${state} —Å–¥–µ–ª–∞—Ç—å ${this.formatAction(action)}`);
        return false;
      }
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ—Å–ª–µ –¥–µ–π—Å—Ç–≤–∏—è (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 0-9)
      if (step.toState < 0 || step.toState > 9) {
        console.error(`‚ùå –ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ ${step.toState} –≤–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ 0-9`);
        return false;
      }
    }
    
    // 6. –†–∞—Å—á—ë—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –æ—Ç–≤–µ—Ç–æ–º
    let calculatedState = start;
    for (const step of steps) {
      calculatedState = this.applyAction(calculatedState, step.action);
    }
    
    if (calculatedState !== answer) {
      console.error(`‚ùå –†–∞—Å—á—ë—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ ${calculatedState} ‚â† –æ—Ç–≤–µ—Ç—É ${answer}`);
      return false;
    }
    
    console.log(`‚úÖ –ü—Ä–∏–º–µ—Ä –≤–∞–ª–∏–¥–µ–Ω (Simple5): ${steps.map(s => this.formatAction(s.action)).join(' ')} = ${answer}`);
    return true;
  }
}
