// ext/components/ExampleView.js - –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–∞ (—Å—Ç–æ–ª–±–∏–∫–æ–º/–≤ —Å—Ç—Ä–æ–∫—É)

/**
 * ExampleView - –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–∏–º–µ—Ä–∞
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –¥–≤–∞ —Ä–µ–∂–∏–º–∞: —Å—Ç–æ–ª–±–∏–∫ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é) –∏ —Å—Ç—Ä–æ–∫–∞
 */
export class ExampleView {
  constructor(container) {
    this.container = container;
    this.displayMode = 'column'; // 'column' | 'inline'
  }

  /**
   * –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–µ–∂–∏–º–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
   * @param {string} mode - 'column' –∏–ª–∏ 'inline'
   */
  setDisplayMode(mode) {
    if (mode === 'column' || mode === 'inline') {
      this.displayMode = mode;
    }
  }

  /**
   * –†–µ–Ω–¥–µ—Ä –ø—Ä–∏–º–µ—Ä–∞ (–º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫ —Ç–∏–ø–∞ "+2", "-5")
   * @param {Array<string>} steps - –ú–∞—Å—Å–∏–≤ —à–∞–≥–æ–≤ –ø—Ä–∏–º–µ—Ä–∞
   * @param {string} mode - –†–µ–∂–∏–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
   */
  render(steps, mode = null) {
    if (mode) {
      this.setDisplayMode(mode);
    }

    // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    this.container.innerHTML = '';
    this.container.className = `example-view example--${this.displayMode}`;

    if (this.displayMode === 'column') {
      this.renderColumn(steps);
    } else {
      this.renderInline(steps);
    }

    // –ê–≤—Ç–æ–º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ —à—Ä–∏—Ñ—Ç–∞
    this.adjustFontSize(steps.length);
  }

  /**
   * –†–µ–Ω–¥–µ—Ä –≤ —Å—Ç–æ–ª–±–∏–∫ (–∫–∞–∂–¥—ã–π —à–∞–≥ –Ω–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ)
   * @param {Array<string>} steps
   */
  renderColumn(steps) {
    steps.forEach(step => {
      const line = document.createElement('div');
      line.className = 'example__line';
      line.textContent = step;
      this.container.appendChild(line);
    });
  }

  /**
   * –†–µ–Ω–¥–µ—Ä –≤ —Å—Ç—Ä–æ–∫—É (–≤—Å–µ —à–∞–≥–∏ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ —Å –ø–µ—Ä–µ–Ω–æ—Å–æ–º)
   * @param {Array<string>} steps
   */
  renderInline(steps) {
    const line = document.createElement('div');
    line.className = 'example__line example__line--inline';
    line.textContent = steps.join(' ');
    this.container.appendChild(line);
  }

  /**
   * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ —à—Ä–∏—Ñ—Ç–∞
   * –§–æ—Ä–º—É–ª–∞ –∏–∑ –ø–ª–∞–Ω–∞: fontSize = clamp(24px, (vh * 0.75) / (lines + 2), 72px)
   * @param {number} lineCount - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫
   */
  adjustFontSize(lineCount) {
    const lines = this.container.querySelectorAll('.example__line');
    if (!lines.length) return;

    const vh = window.innerHeight;
    const clampedLines = Math.min(lineCount, 15); // –º–∞–∫—Å–∏–º—É–º 15 —Å—Ç—Ä–æ–∫ –≤–∏–¥–∏–º—ã—Ö

    // –§–æ—Ä–º—É–ª–∞ –∏–∑ –ø–ª–∞–Ω–∞
    const calculatedSize = (vh * 0.75) / (clampedLines + 2);
    const fontSize = Math.max(24, Math.min(72, calculatedSize));

    lines.forEach(line => {
      line.style.fontSize = `${fontSize}px`;
    });

    console.log(`üìè –†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞: ${fontSize.toFixed(0)}px (–¥–ª—è ${clampedLines} —Å—Ç—Ä–æ–∫)`);
  }

  /**
   * –ü–æ—à–∞–≥–æ–≤—ã–π –ø–æ–∫–∞–∑ (–¥–ª—è –¥–ª–∏–Ω–Ω—ã—Ö —Ü–µ–ø–æ—á–µ–∫ N > 15 –∏–ª–∏ ‚àû)
   * @param {Array<string>} steps - –í—Å–µ —à–∞–≥–∏ –ø—Ä–∏–º–µ—Ä–∞
   * @param {number} speed - –°–∫–æ—Ä–æ—Å—Ç—å –ø–æ–∫–∞–∑–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
   * @param {Function} onComplete - –ö–æ–ª–±—ç–∫ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ–∫–∞–∑–∞
   */
  renderStepByStep(steps, speed = 1000, onComplete = null) {
    this.container.innerHTML = '';
    this.container.className = `example-view example--${this.displayMode}`;

    let currentStep = 0;

    const showNextStep = () => {
      if (currentStep >= steps.length) {
        if (onComplete) {
          onComplete();
        }
        return;
      }

      // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
      if (this.displayMode === 'column') {
        const line = document.createElement('div');
        line.className = 'example__line';
        line.textContent = steps[currentStep];
        this.container.appendChild(line);
      } else {
        // –í —Ä–µ–∂–∏–º–µ "—Å—Ç—Ä–æ–∫–∞" –æ–±–Ω–æ–≤–ª—è–µ–º –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É
        let line = this.container.querySelector('.example__line');
        if (!line) {
          line = document.createElement('div');
          line.className = 'example__line example__line--inline';
          this.container.appendChild(line);
        }
        const currentText = line.textContent;
        line.textContent = currentText ? `${currentText} ${steps[currentStep]}` : steps[currentStep];
      }

      // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞
      this.adjustFontSize(currentStep + 1);

      currentStep++;

      // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞
      setTimeout(showNextStep, speed);
    };

    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–∫–∞–∑
    showNextStep();
  }

  /**
   * –û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
   */
  clear() {
    this.container.innerHTML = '';
  }
}
